name: testing

on:
  push:
    branches:
    - develop

  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[strict,tests,dev]

      - name: Lint
        run: pre-commit run --all-files --show-diff-on-failure

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
            pip install .[strict,tests,docs]

      - name: Test
        run: pytest --cov=qtoolkit --cov-report=xml

  docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Install dependencies
        run: |
          # Required to generate rst files from markdown
          sudo apt install pandoc
          python -m pip install --upgrade pip
          pip install .[docs]

      - name: Build Sphinx docs
        working-directory: doc
        run: |
          # cannot use sphinx build directly as the makefile handles generation
          # of some rst files
          make html

      - name: Fix permissions # following https://github.com/actions/upload-pages-artifact?tab=readme-ov-file#file-permissions
        run: |
          chmod -c -R +rX "./doc/build" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done

      - name: Upload docs artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./doc/build

  deploy_docs:
    if: github.repository == 'matgenix/qtoolkit'
    runs-on: ubuntu-latest
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    needs: docs
    environment:
      name: "Documentation"
      url: https://matgenix.github.io/QToolKit

    steps:
    - name: Deploy docs
      uses: actions/deploy-pages@v2
